name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: [1.22]
        platform: [amd64]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install dependencies
      run: go mod tidy

    - name: Build
      run: |
        GOOS=${{ matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'macos-latest' && 'darwin' || 'windows' }} \
        GOARCH=${{ matrix.platform }} \
        go build -o build/tglotterybot_${{ matrix.os }}_${{ matrix.platform }} .

    - name: Archive binary
      uses: actions/upload-artifact@v3
      with:
        name: tglotterybot-${{ matrix.os }}-${{ matrix.platform }}-v${{ github.ref_name }}
        path: build/tglotterybot_${{ matrix.os }}_${{ matrix.platform }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Download binaries
      uses: actions/download-artifact@v3
      with:
        path: build/

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: build/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
