name: Build and Release Go Project

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.22']
        platform: [amd64, 386, arm64, arm, riscv64]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y build-essential gcc

    - name: Build for Linux ${{ matrix.platform }}
      run: |
        go build -o build/tgLotteryBot_linux_${{ matrix.platform }} .

    - name: Upload Linux Binaries
      uses: actions/upload-artifact@v4
      with:
        name: tgLotteryBot_linux_${{ matrix.platform }}
        path: build/tgLotteryBot_linux_${{ matrix.platform }}

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        go-version: ['1.22']
        platform: [amd64, arm64]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install dependencies
      run: xcode-select --install || true

    - name: Build for macOS ${{ matrix.platform }}
      run: |
        go build -o build/tgLotteryBot_macos_${{ matrix.platform }} .

    - name: Upload macOS Binaries
      uses: actions/upload-artifact@v4
      with:
        name: tgLotteryBot_macos_${{ matrix.platform }}
        path: build/tgLotteryBot_macos_${{ matrix.platform }}

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        go-version: ['1.22']
        platform: [amd64, 386]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Build for Windows ${{ matrix.platform }}
      run: |
        go build -o build/tgLotteryBot_windows_${{ matrix.platform }}.exe .

    - name: Upload Windows Binaries
      uses: actions/upload-artifact@v4
      with:
        name: tgLotteryBot_windows_${{ matrix.platform }}
        path: build/tgLotteryBot_windows_${{ matrix.platform }}.exe

  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [build-linux, build-macos, build-windows]
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

